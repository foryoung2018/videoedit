// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ffmpeg.djinni

#pragma once

#include "djinni_support.hpp"
#include "ffmpeg_watermark.hpp"

namespace djinni_generated {

class NativeFfmpegWatermark final {
public:
    using CppType = ::dc::platform::FfmpegWatermark;
    using JniType = jobject;

    using Boxed = NativeFfmpegWatermark;

    ~NativeFfmpegWatermark();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeFfmpegWatermark();
    friend ::djinni::JniClass<NativeFfmpegWatermark>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dongci/sun/gpuimglibrary/libffmpeg/FfmpegWatermark") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;IIFF)V") };
    const jfieldID field_image { ::djinni::jniGetFieldID(clazz.get(), "image", "Ljava/lang/String;") };
    const jfieldID field_x { ::djinni::jniGetFieldID(clazz.get(), "x", "I") };
    const jfieldID field_y { ::djinni::jniGetFieldID(clazz.get(), "y", "I") };
    const jfieldID field_fromTime { ::djinni::jniGetFieldID(clazz.get(), "fromTime", "F") };
    const jfieldID field_duration { ::djinni::jniGetFieldID(clazz.get(), "duration", "F") };
};

}  // namespace djinni_generated
